<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:s="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd"
	default-lazy-init="true">
    <!-- 该路径下的资源不用过滤 -->
    <s:http pattern="/FusionCharts/**" security="none"/>
    <s:http pattern="/userfiles/**" security="none"/>
    <s:http pattern="/extjs/**" security="none"/>
    <s:http pattern="/css/**" security="none"/>
    <s:http pattern="/images/**" security="none"/>
    <s:http pattern="/js/**" security="none"/>
    <s:http pattern="/index.jsp" security="none"/>
    <s:http pattern="/public/**" security="none"/>
    <s:http pattern="/accessDenied.jsp" security="none"/>
        
    <s:http auto-config="true" use-expressions="true">
        <s:intercept-url pattern="/**" requires-channel="${channel.type}"/>  
        
        <s:custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="filterSecurityInterceptor" />
        <s:form-login login-page="/${login.page}?state=login" default-target-url="/${system.main.page}" authentication-failure-url="/${login.fail.page}?state=login&amp;login_error=true" login-processing-url="/j_spring_security_check" />
        <s:access-denied-handler error-page="/${deny.page}"/>  
        <s:logout logout-success-url="/${logout.page}" />
        <s:session-management session-authentication-error-url="/${login.page}?state=session-authentication-error" invalid-session-url="/login.jsp?state=session-invalid" session-fixation-protection="none" > 
            <s:concurrency-control max-sessions="1" expired-url="/${login.page}?state=session-expired" error-if-maximum-exceeded="false" session-registry-alias="sessionRegistry"/>
        </s:session-management>
        
        <s:port-mappings>
            <s:port-mapping http="${http.port}" https="${https.port}"/>
        </s:port-mappings>
    </s:http>
    
    <s:authentication-manager alias="authenticationManager">
        <s:authentication-provider   user-service-ref="userDetailsServiceImpl" >
            <s:password-encoder  hash="sha-256">
                <s:salt-source ref="saltSource"/>
            </s:password-encoder>
        </s:authentication-provider>
    </s:authentication-manager>
    
    <bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
        <property name="accessDecisionManager" ref="accessDecisionManager" />
        <property name="authenticationManager" ref="authenticationManager" />
        <property name="securityMetadataSource">
            <s:filter-security-metadata-source>
                <s:intercept-url pattern="/**" access="ROLE_ANONYMOUS,ROLE_MANAGER,ROLE_SUPERMANAGER"/>
            </s:filter-security-metadata-source>
        </property>
    </bean>
            
    <bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <property name="decisionVoters">
            <list>
                <bean class="org.springframework.security.access.vote.RoleVoter">
                    <property name="rolePrefix" value="ROLE_" />
                </bean>
                <bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
            </list>
        </property>
    </bean>
    <!--JCaptcha验证码服务 -->
    <bean id="captchaService" class="com.octo.captcha.service.image.DefaultManageableImageCaptchaService">
            <property name="captchaEngine" ref="captchaEngine"/>
            <!-- 
            生成的图片过期��间 , 单位为秒
            -->
            <property name="minGuarantedStorageDelayInSeconds" value="300" />
    </bean>
</beans>