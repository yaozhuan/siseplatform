505f303de92916bd4a2029d001e4857ac044c061
 APDPlatPackageBasedActionConfigBuilder.java | 71 ++++++++++++++++++-----------
 1 file changed, 44 insertions(+), 27 deletions(-)

diff --git a/APDPlatPackageBasedActionConfigBuilder.java b/APDPlatPackageBasedActionConfigBuilder.java
index 222851e..00a6570 100644
--- a/APDPlatPackageBasedActionConfigBuilder.java
+++ b/APDPlatPackageBasedActionConfigBuilder.java
@@ -1,24 +1,24 @@
-/*
- * $Id: PackageBasedActionConfigBuilder.java 1469182 2013-04-18 06:20:37Z lukaszlenart $
- *
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *  http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied.  See the License for the
- * specific language governing permissions and limitations
- * under the License.
+/**
+ * 
+ * APDPlat - Application Product Development Platform
+ * Copyright (c) 2013, 杨尚川, yang-shangchuan@qq.com
+ * 
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ * 
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ * 
  */
-package org.apache.struts2.convention;
+
+package org.apdplat.platform.struts;
 
 import com.opensymphony.xwork2.ActionContext;
 import com.opensymphony.xwork2.FileManager;
@@ -71,16 +71,23 @@ import java.util.HashSet;
 import java.util.List;
 import java.util.Map;
 import java.util.Set;
-import java.util.regex.Pattern;
+import org.apache.struts2.convention.ActionConfigBuilder;
+import org.apache.struts2.convention.ActionNameBuilder;
+import org.apache.struts2.convention.ConventionConstants;
+import org.apache.struts2.convention.InterceptorMapBuilder;
+import org.apache.struts2.convention.ReflectionTools;
+import org.apache.struts2.convention.ResultMapBuilder;
+import org.apache.struts2.convention.StringTools;
+import org.apdplat.module.system.service.PropertyHolder;
 
 /**
  * <p>
  * This class implements the ActionConfigBuilder interface.
  * </p>
  */
-public class PackageBasedActionConfigBuilder implements ActionConfigBuilder {
+public class APDPlatPackageBasedActionConfigBuilder implements ActionConfigBuilder {
 
-    private static final Logger LOG = LoggerFactory.getLogger(PackageBasedActionConfigBuilder.class);
+    private static final Logger LOG = LoggerFactory.getLogger(APDPlatPackageBasedActionConfigBuilder.class);
     private static final boolean EXTRACT_BASE_INTERFACES = true;
 
     private final Configuration configuration;
@@ -128,7 +135,7 @@ public class PackageBasedActionConfigBuilder implements ActionConfigBuilder {
      * @param defaultParentPackage  The default parent package for all the configuration.
      */
     @Inject
-    public PackageBasedActionConfigBuilder(Configuration configuration, Container container, ObjectFactory objectFactory,
+    public APDPlatPackageBasedActionConfigBuilder(Configuration configuration, Container container, ObjectFactory objectFactory,
                                            @Inject("struts.convention.redirect.to.slash") String redirectToSlash,
                                            @Inject("struts.convention.default.parent.package") String defaultParentPackage) {
 
@@ -208,8 +215,18 @@ public class PackageBasedActionConfigBuilder implements ActionConfigBuilder {
      */
     @Inject(value = "struts.convention.action.includeJars", required = false)
     public void setIncludeJars(String includeJars) {
-        if (StringUtils.isNotEmpty(includeJars))
-            this.includeJars = includeJars.split("\\s*[,]\\s*");
+        if (StringUtils.isNotBlank(includeJars)){
+            LOG.info("开始执行apdplat对struts的定制修改");
+            LOG.info("占位符的内容为: "+includeJars);
+            //去掉${和}，从配置文件读取真正内容
+            includeJars=PropertyHolder.getProperty(includeJars.substring(2,includeJars.length()-1));
+            LOG.info("占位符对应的配置文件的内容为: "+includeJars);
+            this.includeJars = includeJars.split(",");
+
+            for(String jar : this.includeJars){
+                LOG.info("struts include jar "+jar);
+            }
+        }
     }
 
     /**
@@ -471,7 +488,7 @@ public class PackageBasedActionConfigBuilder implements ActionConfigBuilder {
                     //it is a jar file, make sure it macthes at least a url regex
                     for (int i = 0; i < includeJars.length; i++) {
                         String includeJar = includeJars[i];
-                        if (Pattern.matches(includeJar, url.toExternalForm())) {
+                        if (url.toExternalForm().contains(includeJar)) {
                             includeUrls.add(url);
                             patternUsed[i] = true;
                             break;